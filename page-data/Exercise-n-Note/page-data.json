{"componentChunkName":"component---src-templates-docs-js","path":"/Exercise-n-Note","result":{"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"About Exercises And Notes\",\n  \"nav_order\": 6,\n  \"hidden\": false\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Exercise = makeShortcode(\"Exercise\");\nvar Note = makeShortcode(\"Note\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Exercise, {\n    title: 'First Exercise',\n    mdxType: \"Exercise\"\n  }, \"This is a coding exercise.\", mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"\\nint values = 0;\\nint sum = 0;\\n\\nwhile (true)\\n{\\n  Console.WriteLine(\\\"Provide a value, a negative value ends the program\\\");\\n  int value = Convert.ToInt32(Console.ReadLine());\\n  if (value < 0)\\n  {\\n    break;\\n  }\\n\\n  values = values + 1;\\n  sum = sum + value;\\n}\\n\\nif (sum == 0)\\n{\\n  Console.WriteLine(\\\"The average of the values could not be calculated.\\\");\\n}\\nelse\\n{\\n  Console.WriteLine(\\\"Average of values: \\\" + (1.0 * sum / value));\\n}\\n\"))), mdx(\"p\", null, \"Dummy text between tags.\"), mdx(Exercise, {\n    title: 'Exercise 1.5',\n    mdxType: \"Exercise\"\n  }, mdx(\"p\", null, \"You will find following structure in the exercise:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"\\nusing System;\\n\\nnamespace exercise_05\\n{\\n  class Program\\n  {\\n    public static void Main(string[] args)\\n      {\\n       string name = \\\"Ada Lovelace\\\";\\n       // Write your code here:\\n       }\\n  }\\n}\\n\")), mdx(\"p\", null, \"This is not a coding exorcist.\")), mdx(Note, {\n    mdxType: \"Note\"\n  }, \"This is just a message for someone to read\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{},"frontmatter":{"title":"About Exercises And Notes"}}},"pageContext":{"id":"ceec4469-ed15-5de6-9c9f-bfa385e97f35"}},"staticQueryHashes":["1885717130","1950529541","2744905544","3020054368"]}